on:
  push:
    branches: [manuscript]
  workflow_dispatch:

name: deploy

jobs:

  # Install necessary dependencies, and render the book from source.
  # This will produce a 'github-pages' artifact.
  render:
    if: "!contains(github.event.head_commit.message, 'skip deploy')"
    name: "Render book"
    runs-on: ubuntu-20.04
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      # Checkout the book source ; do not forget about the data (LFS)!
      # We need to first fetch (`with: lfs: true`) to download objects,
      # then checkout to replace pointers with actual objects.
      - uses: actions/checkout@v3
        with:
          lfs: true
      - run: git lfs checkout

      # Install R; configure it to use RStudio Package Manager (RSPM)
      # to download binary packages (that should speed up installation
      # of dependencies).
      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      # Automatically install dependencies specified in the DESCRIPTION
      # file (both `Imports` and `Remotes`).
      - uses: r-lib/actions/setup-r-dependencies@v2

      # Install pandoc and TinyTeX, which are used to produce the book.
      - uses: r-lib/actions/setup-pandoc@v2
      - name: Install tinytex
        uses: r-lib/actions/setup-tinytex@v2

      # Draw.io is used to automatically produce images from diagrams.
      - name: Download drawio
        # draw.io on headless environments requires version <16.0.2
        run: wget -q -O drawio.deb https://github.com/jgraph/drawio-desktop/releases/download/v16.0.0/drawio-amd64-16.0.0.deb
      - name: Install drawio
        run: |
          sudo apt install ./drawio.deb
          sudo ln -s /opt/drawio/drawio /usr/bin/draw.io

      # Create a virtual environment in the `.venv` dir, and install
      # Python dependencies into this virtual environment.
      # Note: the book is hard-coded to search for a venv in `.venv`
      - name: Setup Python
        run: |
          python3 -m venv ./.venv
          source ./.venv/bin/activate
          pip install -r ./python-requirements.txt

      # Because some packages do not contain required files... *sigh*
      - name: Fix libraries
        run: |
          if [ ! -f /usr/lib/x86_64-linux-gnu/libMagick++-6.Q16.so.8 ]; then ln -s /usr/lib/x86_64-linux-gnu/libMagick++-6.Q16.so /usr/lib/x86_64-linux-gnu/libMagick++-6.Q16.so.8; fi

      - name: Render book
        run: make all OUTPUT_ALL=_book/

      # Upload the resulting book as an artifact so it can be later
      # used to deploy.
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: _book/

  # Deploy the book to GitHub Pages.
  # This will use the artifact 'github-pages' from the previous job.
  deploy:
    name: "Deploy book"
    # This job requires the "render" job first.
    needs: render
    # Grant some permissions to allow deployment.
    permissions:
      pages: write
      id-token: write
    # Specify the environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to GitHub pages
        id: deployment
        uses: actions/deploy-pages@v1
