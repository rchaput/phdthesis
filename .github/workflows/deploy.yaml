on:
  push:
  workflow_dispatch:

name: deploy

jobs:

  render:
    if: "!contains(github.event.head_commit.message, 'skip deploy')"
    name: "Render and deploy book"
    runs-on: ubuntu-20.04
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      # Checkout the book source ; do not forget about the data (LFS)!
      # We need to first fetch (`with: lfs: true`) to to download objects,
      # then checkout to replace pointers with actual objects.
      - uses: actions/checkout@v3
        with:
          lfs: true
      - run: git lfs checkout

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Install tinytex
        uses: r-lib/actions/setup-tinytex@v2

      - name: Download drawio
        # draw.io on headless environments requires version <16.0.2
        run: wget -q -O drawio.deb https://github.com/jgraph/drawio-desktop/releases/download/v16.0.0/drawio-amd64-16.0.0.deb

      - name: Install drawio
        run: |
          sudo apt install ./drawio.deb
          sudo ln -s /opt/drawio/drawio /usr/bin/draw.io

      - name: Setup Python
        run: |
          python3 -m venv ./.venv
          source ./.venv/bin/activate
          pip install -r ./python-requirements.txt

      # Because some packages do not contain required files... *sigh*
      - name: Fix libraries
        run: |
          if [ ! -f /usr/lib/x86_64-linux-gnu/libMagick++-6.Q16.so.8 ]; then ln -s /usr/lib/x86_64-linux-gnu/libMagick++-6.Q16.so /usr/lib/x86_64-linux-gnu/libMagick++-6.Q16.so.8; fi

      - name: Render book
        run: Rscript -e 'bookdown::render_book("index.Rmd", c("thesisdown::thesis_pdf", "thesisdown::thesis_gitbook")); warnings()'

      # Replace this step by a push to GitHub Pages when the repo will be public
      - name: Deploy to server
        uses: burnett01/rsync-deployments@5.2
        with:
          switches: --delete --recursive
          path: _book/
          remote_path: "${{ secrets.REMOTE_DIR }}/${{ github.ref_name }}"
          remote_host: ${{ secrets.REMOTE_HOST }}
          remote_port: ${{ secrets.REMOTE_PORT }}
          remote_user: ${{ secrets.REMOTE_USERNAME }}
          remote_key: ${{ secrets.REMOTE_PRIVATE_KEY }}
